global:
  rbac:
    create: true
    pspEnabled: true
    pspAnnotations:
      pod-security.kubernetes.io/enforce: baseline
      pod-security.kubernetes.io/audit: baseline
      pod-security.kubernetes.io/warn: baseline

alertmanager:
  enabled: true
  alertmanagerSpec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: "Addons-Services"
              operator: In
              values:
              - "true"
  config:
    global:
      resolve_timeout: 5m
    route:
      group_wait: 30s
      group_interval: 1m
      repeat_interval: 12h
      receiver: slack_others
      routes:
      - receiver: slack_critical
        # continue: true
        match:
          severity: critical
      - receiver: slack_warning
        # continue: true
        match:
          severity: warning
      # - receiver: email_alerts
      #   match_re:
      #     severity: critical|warning
    receivers:
    - name: slack_others
      slack_configs:
      - api_url: "https://hooks.slack.com/services/TB5FXBSUE/B04FUJGT9L0/UUn8UaBCoc45n"
        send_resolved: true
        icon_url: https://avatars3.githubusercontent.com/u/3380462
        title: |-
          [{{ .Status | toUpper }}{{ if eq .Status "firing" }}: {{ .Alerts.Firing | len }}{{ end }}]
        text: |-
          {{ range .Alerts }}

          *Alert Name :* {{ .Labels.alertname }}

          {{- if .Annotations.summary }}
          *Alert Summary:* {{ .Annotations.summary }}
          {{- end -}}

          {{- if .Annotations.description }}
          *Alert Description:* {{ .Annotations.description }}
          {{ else }}
          *Alert Message:* {{ .Annotations.message }}
          {{- end }}

          *Alert Details:*
          {{ range .Labels.SortedPairs }} • *{{ .Name }}:* `{{ .Value }}`
          {{ end }}
          {{ end }}

    - name: slack_critical
      slack_configs:
      - api_url: "https://hooks.slack.com/services/TB5FXBSUE/B04FUJGT9L0/UUn8UaBCoc45n"
        send_resolved: true
        icon_url: https://avatars3.githubusercontent.com/u/3380462
        title: |-
          [{{ .Status | toUpper }}{{ if eq .Status "firing" }}: {{ .Alerts.Firing | len }}{{ end }}]
        text: |-
          {{ range .Alerts }}

          *Alert Name :* {{ .Labels.alertname }}

          {{- if .Annotations.summary }}
          *Alert Summary:* {{ .Annotations.summary }}
          {{- end -}}

          {{- if .Annotations.description }}
          *Alert Description:* {{ .Annotations.description }}
          {{ else }}
          *Alert Message:* {{ .Annotations.message }}
          {{- end }}

          *Alert Details:*
          {{ range .Labels.SortedPairs }} • *{{ .Name }}:* `{{ .Value }}`
          {{ end }}
          {{ end }}

    - name: slack_warning
      slack_configs:
      - api_url: "https://hooks.slack.com/services/TB5FXBSUE/B04FUJGT9L0/UUn8UaBCoc45n"
        send_resolved: true
        icon_url: https://avatars3.githubusercontent.com/u/3380462
        title: |-
          [{{ .Status | toUpper }}{{ if eq .Status "firing" }}: {{ .Alerts.Firing | len }}{{ end }}]
        text: |-
          {{ range .Alerts }}

          *Alert Name :* {{ .Labels.alertname }}

          {{- if .Annotations.summary }}
          *Alert Summary:* {{ .Annotations.summary }}
          {{- end -}}

          {{- if .Annotations.description }}
          *Alert Description:* {{ .Annotations.description }}
          {{ else }}
          *Alert Message:* {{ .Annotations.message }}
          {{- end }}

          *Alert Details:*
          {{ range .Labels.SortedPairs }} • *{{ .Name }}:* `{{ .Value }}`
          {{ end }}
          {{ end }}


defaultRules:
  disabled:
    Watchdog: true
    # InfoInhibitor: true
    # TargetDown: true
  # KubeAPIDown: true
  # NodeRAIDDegraded: true

grafana:
  resources:
    limits:
      cpu: 1000m
      memory: 3Gi
    requests:
      cpu: 300m
      memory: 500Mi
  sidecar:
    resources:
      limits:
        cpu: 400m
        memory: 400Mi
      requests:
        cpu: 50m
        memory: 50Mi
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: "Addons-Services"
            operator: In
            values:
            - "true"
  persistence:
    size: 20Gi

kube-state-metrics:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: "Addons-Services"
            operator: In
            values:
            - "true"

prometheusOperator:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: "Addons-Services"
            operator: In
            values:
            - "true"

prometheus:
  ingress:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: "Addons-Services"
              operator: In
              values:
              - "true"
  prometheusSpec:
    storageSpec:
      volumeClaimTemplate:
        spec:
          resources:
            requests:
              storage: 50Gi
    retention: 30d
    walCompression: true
    ## If true, the Operator won't process any Prometheus configuration changes
    ##
    paused: false
    resources:
      limits:
        cpu: 1200m
        memory: 4Gi
      requests:
        cpu: 200m
        memory: 800Mi
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: "Addons-Services"
              operator: In
              values:
              - "true"

#   rbac:
#     pspEnabled: true

# prometheus-node-exporter:
#   rbac:
#     pspEnabled: true
